# -*- coding: utf-8 -*-
"""baseline.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E43oLfh-qXHuBilxz7mGdYM-gkZcFCDM
"""
# version august 1st

import configparser,os
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import time
import keras
from keras.preprocessing import image# for RGB images

from tqdm import tqdm
from numpy import ndarray as nd
#import sys

from keras.callbacks import EarlyStopping
from keras.callbacks import ModelCheckpoint
from keras.callbacks import CSVLogger
from keras.models import load_model
#from keras.utils import np_utils

#import skimage.transform
from mpl_toolkits import axes_grid1

from data_util.load_options import *
from data_util.data_load import *
from data_util.augment import *
from data_util.helpers import *
from data_util.train_eval import *
#if used on a non-GUI server ######
import matplotlib
matplotlib.use('Agg')
###################################


## config file reading and data loading
CURRENT_PATH = os.getcwd()
user_config = configparser.RawConfigParser()
user_config.read(os.path.join(CURRENT_PATH, 'configuration.cfg'))
options = load_options(user_config)
data_load(options)


train(options['mode'],mc=True)
dice_hat=eval_DiceNet(options['mode'])
p,uncertainty_mc = eval_mc(options['mode'])
#mask_plt(X_ts,p,uncertainty_mc) # plotting predictions and uncertainty mapping

## HERE PLOTTING functions
X=parsing(load_options['Nmodels'],load_options['Ndata'])
generate_plot(X,load_options['Nmodels']) # generating plotting

